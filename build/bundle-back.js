!function(e){var t={};function n(o){if(t[o])return t[o].exports;var i=t[o]={i:o,l:!1,exports:{}};return e[o].call(i.exports,i,i.exports,n),i.l=!0,i.exports}n.m=e,n.c=t,n.d=function(e,t,o){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)n.d(o,i,function(t){return e[t]}.bind(null,i));return o},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=5)}([function(e,t){e.exports=require("path")},function(e,t){e.exports=require("express")},function(e,t){e.exports=require("mongoose")},function(e,t,n){const o=n(2),i=n(0),r=o.Schema({name:{type:String,required:!0},imageName:{type:String,required:!0},description:{type:String,trim:!0},comments:[{type:o.Schema.Types.ObjectId,ref:"Comment"}]},{timestamps:!0});r.virtual("imageUrl").get((function(){if(this.imageName)return"\\"+i.join("img","campImg",this.imageName)})),e.exports=o.model("Camp",r)},function(e,t,n){const o=n(2),i=o.Schema({content:{type:String,trim:!0},author:{type:String}});e.exports=o.model("Comment",i)},function(e,t,n){e.exports=n(6)},function(e,t,n){const o=n(0),i=n(1),r=n(7),a=n(8);n(9);const c=n(11),s=n(14),m=i();m.set("views",o.join("views")),m.set("view engine","ejs"),m.use(i.json()),m.use(i.urlencoded({extended:!1})),m.use(i.static(o.join("public"))),m.use(a("_method")),m.get("/",(e,t)=>{t.render("home",{title:"Home"})}),m.use(c),m.use(s),m.get("*",(e,t)=>{t.render("404",{pageTitle:"404",error:"Page not found."})});const p=process.env.PORT||"3000";m.listen(p,()=>{console.log(r.blue("=====================")),console.log(r.bold("http://localhost:"+r.bold.red(p))),console.log(r.blue("====================="))})},function(e,t){e.exports=require("chalk")},function(e,t){e.exports=require("method-override")},function(e,t,n){const o=n(2);n(10).config();(async()=>{try{await o.connect(process.env.MONGO_URI,{useNewUrlParser:!0,useUnifiedTopology:!0}),console.log("database connected!!")}catch(e){console.log(e)}})()},function(e,t){e.exports=require("dotenv")},function(e,t,n){const o=n(1).Router(),i=n(0),r=n(12),a=n(13),c=n(3),s=(n(4),a({dest:i.join("public","img","campImg"),limits:1e5,fileFilter(e,t,n){t.originalname.match(/\.(jpg|jpeg|png|gif)$/i)||n(new Error("File type not allowed.")),n(null,!0)}}));o.get("/camps",async(e,t)=>{try{const e=await c.find({});t.render("camps/index",{pageTitle:"Camps",camps:e})}catch(e){console.log(e)}}),o.post("/camps",s.single("campImg"),async(e,t)=>{try{const n=new c({name:e.body.campName,imageName:e.file.filename,description:e.body.description});await n.save(),t.redirect("/camps")}catch(e){console.log(e)}}),o.get("/camps/new",(e,t)=>{t.render("camps/new",{pageTitle:"Add Camp"})}),o.get("/camps/:id",async(e,t)=>{try{const n=await c.findById(e.params.id).populate("comments").exec();console.log(n),t.render("camps/show",{pageTitle:n.name,camp:n})}catch(e){console.log(e)}}),o.get("/camps/:id/edit",async(e,t)=>{try{const n=await c.findById(e.params.id);t.render("camps/edit",{pageTitle:"Edit camp",camp:n})}catch(e){console.log(e)}}),o.put("/camps/:id",s.single("campImg"),async(e,t)=>{try{const n=await c.findById(e.params.id);r.unlink(i.join("public","img","campImg",n.imageName),e=>{if(e)throw e}),n.name=e.body.name,n.description=e.body.description,n.imageName=e.file.filename,await n.save(),t.redirect("/camps/"+e.params.id)}catch(e){console.log(e)}}),o.delete("/camps/:id",async(e,t)=>{const n=await c.findById(e.params.id);r.unlink(i.join("public","img","campImg",n.imageName),e=>{if(e)throw e}),await n.remove(),t.redirect("/camps")}),e.exports=o},function(e,t){e.exports=require("fs")},function(e,t){e.exports=require("multer")},function(e,t,n){const o=n(1).Router(),i=n(3),r=n(4);o.post("/camps/:id/comments",async(e,t)=>{try{const n=await i.findById(e.params.id),o=new r({content:e.body.content,author:e.body.author});await o.save(),n.comments.push(o),await n.save(),t.redirect("/camps/"+e.params.id)}catch(e){console.log(e)}}),e.exports=o}]);